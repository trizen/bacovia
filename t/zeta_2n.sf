#!/usr/bin/ruby

include('../lib/bacovia.sf')

const τ = (Log(-1) * -2i)

func zeta_2n(n) {
    (-1)**(n+1) * bernoulli(2*n) * τ**(2*n) / ((2*n)! * 2)
}

var expressions = [
    '((1 / 4) * (-4) * (1/6) * log(-1)^2)',
    '((1 / 48) * (16) * (1/30) * log(-1)^4)',
    '((1 / 1440) * (-64) * (1/42) * log(-1)^6)',
    '((1 / 80640) * (256) * (1/30) * log(-1)^8)',
    '((1 / 7257600) * (-1024) * (5/66) * log(-1)^10)',
]

assert_eq(gather {
    for n in (1..5) {
        var z = zeta_2n(n).simple.pretty
        say "zeta(#{2*n}) = #{z}"
        take(z)
    }
}, expressions)

say "** Test passed!"
