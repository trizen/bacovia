#!/usr/bin/ruby

include('../lib/bacovia.sf')

# fib(n) = ((1/2 (1 + sqrt(5)))^n - (2/(1 + sqrt(5)))^n cos(π n))/sqrt(5)

func fibonacci(n) {
    static S = Power(5, 1/2)
    static π = (Log(-1) * -1i)
    (((1 + S)/2)**n - ((2/(1 + S))**n  * cos(π * n))) / S
}

for n in (1..5) {
    var f = fibonacci(n)
    assert_eq(f.numeric.round(-20), n.fib)
}

assert_eq(
    fibonacci(Symbol(:n)).simple.pretty,
    '((((5^(1/2) + 1)/2)^n - (((exp((-i * (log(-1) * -i * n))) + exp((i * (log(-1) * -i * n))))/2) * (2/(1 + 5^(1/2)))^n))/5^(1/2))'
)

say fibonacci(Symbol(:n)).simple.pretty
