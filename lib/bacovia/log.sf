#!/usr/bin/ruby

class Log(v) {

    method +(Log o) {
        Log(v * o.v)
    }

    method +(Object o) {
        Sum(self, o)
    }

    method -(Log o) {
        Log(v / o.v)
    }

    method -(Object o) {
        Sum(self, o.neg)
    }

    method inv {
        Fraction(1, self)
    }

    method neg {
        Product(-1, self)
    }

    method alternatives {
        gather {
            for a in (v.alternatives) {
                take(Log(a))

                if (a.kind_of(Exp)) {
                    take(a.v)
                }
            }
        }.uniq_by { .to_s }
    }

    method numeric {
        v.numeric.log
    }

    method to_s {
        "Log(#{v})"
    }
}
