#!/usr/bin/ruby

class Log(v) {

    has cache = Hash()

    method +(Log o) {
        Log(v * o.v)
    }

    method -(Log o) {
        Log(v / o.v)
    }

    method alternatives() {
        cache{:alt} := do {
            gather {
                for a in (v.alternatives) {
                    take(Log(a))

                    if (a.kind_of(Exp)) {
                        take(a.v)
                    }
                }
            }.uniq_by { .to_s }
        }
    }

    method ==(Log o) {
        v == o.v
    }

    method ==(_) {
        false
    }

    method neg {
        cache{:neg} := Log(v.inv)
    }

    method numeric {
        cache{:num} := v.numeric.log
    }

    method pretty() {
        cache{:pretty} := "log(#{v.pretty})"
    }

    method to_s {
        cache{:str} := "Log(#{v})"
    }
}
