#!/usr/bin/ruby

class Number {

    # Addition
    method +(Product o) {
        o + self
    }

    method +(Sum o) {
        o + self
    }

    method +(Power o) {
        o + self
    }

    method +(Log o) {
        o + self
    }

    method +(Symbol o) {
        o + self
    }

    method +(Fraction o) {
        o + self
    }

    method +(Exp o) {
        o + self
    }

    # Subtraction
    method -(Fraction o) {
        o.neg + self
    }

    method -(Product o) {
        o.neg + self
    }

    method -(Symbol o) {
        o.neg + self
    }

    method -(Sum o) {
        o.neg + self
    }

    method -(Log o) {
        o.neg + self
    }

    method -(Power o) {
        o.neg + self
    }

    method -(Exp o) {
        o.neg + self
    }

    # Multiplication
    method *(Fraction o) {
        o * self
    }

    method *(Log o) {
        o * self
    }

    method *(Product o) {
        o * self
    }

    method *(Power o) {
        o * self
    }

    method *(Symbol o) {
        o * self
    }

    method *(Sum o) {
        o * self
    }

    method *(Exp o) {
        o * self
    }

    # Division
    method /(Sum o) {
        o.inv * self
    }

    method /(Product o) {
        o.inv * self
    }

    method /(Fraction o) {
        o.inv * self
    }

    method /(Log o) {
        o.inv * self
    }

    method /(Power o) {
        o.inv * self
    }

    method /(Symbol o) {
        o.inv * self
    }

    method /(Exp o) {
        o.inv * self
    }

    # Other
    method inv {
        Fraction(1, self)
    }

    method alternatives {
        [self]
    }

    method numeric {
        self
    }
}
